{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1170c41f.chunk.js","sourcesContent":["import {React} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport const MatchDetailCard = ({teamName,match}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1===teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName===match.matchWinner;\r\n    return (\r\n       \r\n        <div className={isMatchWon ? 'MatchDetailCard won-card': 'MatchDetailCard lost-card'}>\r\n        <div>\r\n          <span className=\"vs\"> vs </span>\r\n          <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n          <h2 className=\"match-date\"> {match.date} </h2>\r\n          <h3 className=\"match-venue\"> at {match.venue}</h3>\r\n          <h3 className=\"match-result\"> {match.matchWinner} won by {match.resultMargin} {match.result} </h3>\r\n        </div>\r\n        <div className=\"additional-detail\">\r\n          <h3>First Inning</h3>\r\n          <p>{match.team1}</p>\r\n          <h3>Second Inning</h3>\r\n          <p>{match.team2}</p>\r\n          <h3>Man of the match</h3>\r\n          <p>{match.playerOfMatch}</p>\r\n          <h3>Umpire</h3>\r\n          <p>{match.umpire1}, {match.umpire2}</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\"\r\nimport \"./MatchSmallCard.scss\"\r\n\r\nexport const MatchSmallCard = ({match, teamName}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2: match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className= {isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n        <h3>vs <Link to={otherTeamRoute}>{otherTeam}</Link></h3>\r\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </p>\r\n    </div>\r\n);\r\n}","import {React, useEffect, useState} from 'react'\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport {MatchSmallCard} from \"../components/MatchSmallCard\";\r\n\r\n\r\nimport './TeamPage.scss'\r\nexport const TeamPage = () => {\r\n    const [team, setTeam] = useState( {matches: []});\r\n    const { teamName } = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchMatches();\r\n        }, []\r\n    );\r\n    if (!team|| !team.teamName) {\r\n        return <h1> Team not found</h1>\r\n    }\r\n    return (\r\n        <div className=\"TeamPage\">\r\n           <div className=\"team-name-section\" >\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n                <h3>Latest Matches</h3>\r\n           </div> \r\n\r\n        <div className=\"win-loss-section\"> \r\n            Wins / Losses\r\n            <PieChart\r\n                data = {[\r\n                    {title: 'Losees', value: team.totalMatches-team.totalWins, color: '#a34d5d'},\r\n                    {title: 'Wins', value: team.totalWins, color: '#4da375'}\r\n                ]}\r\n            />\r\n        </div>\r\n        <div className=\"match-detail-section\">\r\n            <MatchDetailCard  teamName={team.teamName}  match={team.matches[0]}/>\r\n        </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} match={match} teamName={team.teamName} />)}\r\n        <div className=\"more-link\">\r\n            <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`} >More </Link>\r\n        </div>\r\n\r\n        </div>\r\n);\r\n}\r\n\r\n","import {React} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './YearSelector.scss'\r\nexport const YearSelector =({teamName}) => {\r\n    let years = [];\r\n    const startYear=process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear=process.env.REACT_APP_DATA_END_YEAR;\r\n    for (let i= startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n    return (\r\n        <ol className='years-list'>\r\n            {\r\n            years.map(year => \r\n            <li key={year} >\r\n                <Link to={`/teams/${teamName}/matches/${year}`} > {year} </Link>\r\n            </li> \r\n             ) \r\n    }\r\n        </ol>\r\n    )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './MatchPage.scss'\r\nexport const MatchPage = () => {\r\n    const [matches,setMatches] = useState([]);\r\n    const {teamName,year} = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`http://localhost:8080/team/${teamName}/matches/?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n    return (\r\n        <div className=\"MatchPage\">\r\n        <div className='year-selector'>\r\n            <h3>Select Year</h3>\r\n            <YearSelector teamName={teamName}/>\r\n        </div>\r\n        \r\n        <div>\r\n        <h1  className='page-heading'>{teamName} matches in {year}</h1>\r\n        {\r\n            matches.map(match => <MatchDetailCard key={match.id}  teamName = {teamName} match={match} /> )\r\n        }\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n\r\n","import {React} from 'react'\r\nimport './TeamTile.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className=\"TeamTile\" >\r\n            <Link to ={`/teams/${teamName}`}>\r\n                {teamName}\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n}","import {React, useEffect, useState} from 'react'\r\nimport './HomePage.scss'\r\nimport { TeamTile } from '../components/TeamTile';\r\nexport const HomePage = () => {\r\n    const [teams, setTeams] = useState( []);\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams= async () => {\r\n                const response = await fetch(`http://localhost:8080/team/`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n   \r\n    return (\r\n        <div className=\"HomePage\">\r\n           <div className=\"header-section\" >\r\n                <h1 className=\"app-name\">\r\n                     Java Brains IPL Dashboard\r\n                </h1>\r\n           </div> \r\n           <div className=\"team-grid\">\r\n                { teams.map(team => <TeamTile  key={team.id} teamName={team.teamName} />)}\r\n           </div>\r\n        </div>\r\n);\r\n}\r\n\r\n","import './App.scss';\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom'\nimport {TeamPage} from \"./pages/TeamPage\";\nimport {MatchPage} from \"./pages/MatchPage\"\nimport {HomePage} from \"./pages/HomePage\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n      <Route path=\"/teams/:teamName/matches/:year\">\n       <MatchPage />\n      </Route>\n      <Route path=\"/teams/:teamName\">\n      <TeamPage />\n      </Route>\n      <Route path=\"/\">\n        <HomePage />\n      </Route>\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}